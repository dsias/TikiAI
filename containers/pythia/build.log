Sending build context to Docker daemon  100.9kB
Step 1/49 : FROM nvidia/cuda:10.1-devel-ubuntu18.04
 ---> 010a71dc59db
Step 2/49 : RUN mkdir -p /final
 ---> Using cache
 ---> c5f17f789492
Step 3/49 : WORKDIR /final
 ---> Using cache
 ---> 87b2d37af95f
Step 4/49 : RUN mkdir -p /final/data
 ---> Using cache
 ---> 40de7d1b2ba5
Step 5/49 : RUN mkdir -p /final/pack
 ---> Using cache
 ---> b4912e583f02
Step 6/49 : RUN mkdir -p /final/work
 ---> Using cache
 ---> da2ed6b7368b
Step 7/49 : ENV LANG=C.UTF-8
 ---> Using cache
 ---> a26a834a1114
Step 8/49 : ARG DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 0d69936ea6cc
Step 9/49 : RUN apt update
 ---> Using cache
 ---> 37f17f9fe6c9
Step 10/49 : RUN apt install -yq apt-utils
 ---> Using cache
 ---> e926987bfda4
Step 11/49 : RUN apt install -yq wget git
 ---> Using cache
 ---> 5ac0828aa9df
Step 12/49 : RUN apt install -yq python3-pip python3-dev
 ---> Using cache
 ---> 6f10c4d1e242
Step 13/49 : RUN ln -s /usr/bin/python3 /usr/local/bin/python
 ---> Using cache
 ---> 2b31bc7bbdde
Step 14/49 : RUN ln -s /usr/bin/pip3 /usr/local/bin/pip
 ---> Using cache
 ---> 1411032fae95
Step 15/49 : RUN pip install --upgrade pip
 ---> Using cache
 ---> 7ce0844db8b4
Step 16/49 : RUN mkdir -p /final/data
 ---> Using cache
 ---> 806d34ac0622
Step 17/49 : RUN wget -qO /final/data/vocabulary_100k.txt      https://dl.fbaipublicfiles.com/pythia/data/vocabulary_100k.txt
 ---> Using cache
 ---> ece6f10ed423
Step 18/49 : RUN wget -qO /final/data/answers_vqa.txt          https://dl.fbaipublicfiles.com/pythia/data/answers_vqa.txt
 ---> Using cache
 ---> d2cb6c70a83a
Step 19/49 : RUN wget -qO /final/data/pythia.pth               https://dl.fbaipublicfiles.com/pythia/pretrained_models/vqa2/pythia_train_val.pth
 ---> Using cache
 ---> f2c790741ce9
Step 20/49 : RUN wget -qO /final/data/pythia.yaml              https://dl.fbaipublicfiles.com/pythia/pretrained_models/vqa2/pythia_train_val.yml
 ---> Using cache
 ---> c051483f157d
Step 21/49 : RUN wget -qO /final/data/detectron_model.pth      https://dl.fbaipublicfiles.com/pythia/detectron_model/detectron_model.pth
 ---> Using cache
 ---> 4765d7139e3e
Step 22/49 : RUN wget -qO /final/data/detectron_model.yaml     https://dl.fbaipublicfiles.com/pythia/detectron_model/detectron_model.yaml
 ---> Using cache
 ---> 6b401b68d93a
Step 23/49 : RUN wget -qO /final/data/detectron_weights.tar.gz https://dl.fbaipublicfiles.com/pythia/data/detectron_weights.tar.gz
 ---> Using cache
 ---> 449ed0f58046
Step 24/49 : RUN tar   xf /final/data/detectron_weights.tar.gz -C /final/data
 ---> Using cache
 ---> f860f0a9093e
Step 25/49 : RUN apt install -yq libsm6 libxext6 libxrender-dev
 ---> Using cache
 ---> 76adb1ddc6b9
Step 26/49 : RUN pip install torch
 ---> Using cache
 ---> b44d2bcd657a
Step 27/49 : RUN pip install opencv-python torchvision torchtext
 ---> Using cache
 ---> 4188a6fb9de9
Step 28/49 : RUN pip install ninja yacs cython matplotlib demjson click
 ---> Using cache
 ---> e8b817d88514
Step 29/49 : RUN pip install git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI
 ---> Using cache
 ---> a114a987e95b
Step 30/49 : RUN git clone https://github.com/facebookresearch/fastText.git /final/pack/fastText
 ---> Using cache
 ---> 4c059b88b300
Step 31/49 : RUN pip install -e /final/pack/fastText
 ---> Using cache
 ---> 890e65df54ac
Step 32/49 : RUN git clone https://github.com/facebookresearch/pythia.git /final/pack/pythia
 ---> Using cache
 ---> aaf7dcf8bdd7
Step 33/49 : RUN sed -i '/torch/d' /final/pack/pythia/requirements.txt
 ---> Using cache
 ---> 7c2b5eb40187
Step 34/49 : RUN pip install -e /final/pack/pythia
 ---> Using cache
 ---> 9a240af7b384
Step 35/49 : RUN git clone https://gitlab.com/meetshah1995/vqa-maskrcnn-benchmark.git /final/pack/vqa-maskrcnn-benchmark
 ---> Using cache
 ---> 9de27859a481
Step 36/49 : WORKDIR /final/pack/vqa-maskrcnn-benchmark
 ---> Using cache
 ---> 1e97d052cdf7
Step 37/49 : RUN python setup.py build
 ---> Using cache
 ---> 053255828270
Step 38/49 : RUN python setup.py develop
 ---> Using cache
 ---> 6676739e5eef
Step 39/49 : WORKDIR /final
 ---> Using cache
 ---> 34254239be1a
Step 40/49 : WORKDIR /final/work
 ---> Using cache
 ---> a258802d694e
Step 41/49 : COPY cache.py .
 ---> Using cache
 ---> 3005b864b143
Step 42/49 : RUN /final/work/cache.py .
 ---> Using cache
 ---> 70c53f11711f
Step 43/49 : RUN pip install flask flask-restful
 ---> Using cache
 ---> c31c3462d4ea
Step 44/49 : COPY entry.py .
 ---> Using cache
 ---> 035371f703aa
Step 45/49 : RUN /final/work/entry.py
 ---> Using cache
 ---> f3ed2f17dd80
Step 46/49 : COPY africa.jpg .
 ---> Using cache
 ---> 6727074a6c34
Step 47/49 : RUN /final/work/entry.py --mode cli --device cpu --image africa.jpg --question 'where is this place ?'
 ---> Using cache
 ---> 5405ee47c9c4
Step 48/49 : EXPOSE 5000
 ---> Running in c5cddecc5d6c
Removing intermediate container c5cddecc5d6c
 ---> 775d1861b307
Step 49/49 : CMD /final/work/entry.py --mode api --device cpu
 ---> Running in 2b0eb467ed80
Removing intermediate container 2b0eb467ed80
 ---> b2d921213c35
Successfully built b2d921213c35
Successfully tagged psnonis/w251-final:pythia
